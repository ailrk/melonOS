#!/usr/bin/env bash

# This command creates a new virutal tty and connect it to the unix socket.
# QEMU will output uarts to the unix socket, and on the other end we can
# communicate with it through /tmp/virtual-tty with picocom.

# wait until the qemu serial sock is created
while [ ! -S /tmp/qemu-serial.sock ]; do sleep 0.1; done

o_tty="/tmp/melonos-qemu-out-tty"
o_log="/tmp/melonos-qemu-out-log"


cleanup() {
    echo "Cleaning up..."
    rm -f "$o_tty" "$o_log"
}

mkfifo $o_tty $o_log

# multiplex the output from the socket.
socat \
  UNIX-CONNECT:/tmp/qemu-serial.sock \
  SYSTEM:"tee $o_tty $o_log > /dev/null" &

socat - PTY,link=/tmp/virtual-tty,raw,echo=0 < $o_tty &
cat $o_log > .uart.log


# Clean up on exit, interruption, or termination
trap cleanup EXIT
